@model IEnumerable<TrumpCL.DataField>
@{
    ViewBag.Title = "Appointment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/Gridmvc.css" rel="stylesheet" />

<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script src="~/Scripts/gridmvc.min.js"></script>






@using GridMvc.Html;
@using GridMvc.DataAnnotations;
@using GridMvc.Sorting;
@helper ADDCOLUMN(TrumpCL.DataField tb)
{
    if (tb.Status == "Pre")
    {
        <a href="../Home/EditPage?EditID=@tb.GP_ID">
            <img src="~/Layout/Images/51-512.png" width="30" height="30" />
        </a>
    }
    else
    {
        @Html.ActionLink("View", "EditPage", new { EditID = tb.GP_ID })
    }
}

@helper CustomPostionOfItam(TrumpCL.DataField item)
{
    if (item.Status == "Arrived")
    {
        @*<span>Pre-Appointment</span>*@
        <span>Check-in</span>
    }
    else if (item.Status == "OUT")
    {
        <span>Check-out</span>
    }
    else if (item.Status == "Reject")
    {
        <span>Reject</span>
    }
    else if (item.Status == "Cancel")
    {
        <span>Cancel</span>
    }
    else if (item.Status == "Pre")
    {
        <span>Appointment</span>
    }
}
<link href="~/Layout/Css/jtable_jqueryui.css" rel="stylesheet" />
<link href="~/Layout/Css/jquery.dataTables_themeroller.css" rel="stylesheet" />

<div class="content" style="font-size:12px;min-height:100%">
    <div class="content_resize">
        <div class="mainbar">
            <div class="article">
                <style type="text/css">
                    #accordion div {
                        display: none;
                    }
                </style>
                @*<div role="tablist" class="ui-accordion ui-widget ui-helper-reset" id="accordion">
                        <h3 tabindex="0" aria-selected="false" aria-controls="ui-accordion-accordion-panel-0" id="ui-accordion-accordion-header-0" role="tab" class="clsAccordion ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-accordion-icons">
                            <a id="NewVisitorCompany" style="font-size: 15px; font-weight: 400; color: #555;" href="../Home/Create" class="VisitorCompanyQuickAdd">
                                <img src="~/Layout/Images/NewRecord.png">&nbsp;New
                            </a> &nbsp; &nbsp; &nbsp;
                            <a id="DeleteVisitorCompany" href="#" style="font-size: 15px; font-weight: 400; color: rgb(85, 85, 85);" data-toggle="modal" data-target="#myModal">
                                <img src="~/Layout/Images/Erase.png">&nbsp;Cancel
                            </a>
                        </h3>
                    </div>*@
                <div id="accordion">
                    <h4 class="clsAccordion">
                        TOTAL APPOINTMENTS
                    </h4>
                </div>
                <br />



                <div class="jtable-busy-message"> @TempData["error"]</div>
                <div id="VisitorCompanyTableContainer">
                    <div class="jtable-main-container">
                        <div class="jtable" id="jtable">
                            <div class="table table-bordered table-responsive" id="table2">
                                @Html.Grid(Model).Columns(columns =>
                           {
                               //columns.Add().Encoded(false).Sanitized(false)
                               //.RenderValueAs(o => Html.CheckBox("checked", false, new { key = o.GP_ID, id = "checked" }));
                               //columns.Add(c => c.GP_ID).Titled("ID").Filterable(true).Sortable(true).Css("hidden");
                               //columns.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(z => ADDCOLUMN(z));
                               columns.Add(c => c.GP).Titled("Appointment ID").Filterable(true).Sortable(true).Css("ContentTitle");
                               columns.Add(c => c.VisDate.Date).Titled("Date").Format("{0:dd/MMM/yyyy}").Css("ContentTitle").Sortable(true).Filterable(true);
                               columns.Add(c => c.VisTime).Titled("Time").Css("ContentTitle").Filterable(true).Sortable(true);
                               columns.Add(c => c.VisDuration).Titled("Duration").Css("ContentTitle").Sortable(true).Filterable(true);
                               columns.Add(c => c.comName).Titled("Company").Css("ContentTitle").Sortable(true).Filterable(true);
                               columns.Add(c => c.visName).Titled("Visitor").Css("ContentTitle").Sortable(true).Filterable(true);
                               columns.Add(c => c.Type).Titled("Visit Type").Css("ContentTitle").Sortable(true).Filterable(true);
                               //columns.Add(c => c.Status).Titled("Status").Css("ContentTitle").Sortable(true).Encoded(false).Sanitized(false).RenderValueAs(o => CustomPostionOfItam(o)).Filterable(true);
                               //columns.Add().Titled("Status").Css("ContentTitle").Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(z => CustomPostionOfItam(z));
                               //columns.Add().Titled("Status").Css("ContentTitle").Sortable(true).Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(z => CustomPostionOfItam(z));

                               // columns.Add(c => c.Status).Titled("Status").Css("ContentTitle").Sortable(true).Encoded(false).Sanitized(false).RenderValueAs(o => CustomPostionOfItam(o)).Filterable(true);

                               columns.Add(c => c.Status).Titled("Status").Css("ContentTitle").Sortable(true).Filterable(true);



                               columns.Add(c => c.V_Type).Titled("Visitor Type").Css("ContentTitle").Sortable(true).Filterable(true);
                               columns.Add(c => c.RejectRemark).Titled("Remark").Css("ContentTitle").Sortable(true).Filterable(true);
                               columns.Add(c => c.Region).Titled("Region").Css("Region").Sortable(true).Filterable(true);
                               //columns.Add(c => c.Status).Titled("STATUS").Filterable(true).Sortable(true);
                           }).Sortable(true).WithPaging(50)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade out" id="myModal" aria-hidden="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" id="btnclose" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Alert</h4>
            </div>

            <form id="contact" action="~/Home/CancelEntry" method="post">
                <input type="hidden" id="delHidden" name="delHidden" />
                <div class="modal-body">
                    <label>Are you sure want to cancel</label>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnsavedate" class="btn Button">Yes</button>
                    <button type="button" id="Btnclose" class="btn Button">No</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="~/Layout/Scripts/jtable.2.3.0/jquery.jtable.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
    $(document).ready(function () {
        $('#DeleteVisitorCompany').click(function () {
            $("#myModal").show(function () {
                var KEY1 = "";
                $("#table2 input[type=checkbox]:checked").each(function () {
                    debugger
                    var KEY = ($(this).closest("tr").find("td").eq(1).text() + ";");
                    KEY1 = KEY1 + KEY;
                    $("#delHidden").val(KEY1)
                });
            });
        })
    })
</script>
<script>
    $(function () {
        $("#Btnclose").click(function () {
            $("#myModal").modal("hide");
        });
    });
</script>

<script src="~/Scripts/gridmvc.min.js"></script>