@model IEnumerable<Trump.Models.sp_AppUpcoming_Result>
@{
    ViewBag.Title = "AppUpcomingReq";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
@using GridMvc.Html;
@using GridMvc.DataAnnotations;
@using GridMvc.Sorting;
@helper CustomPostionOfItam(Trump.Models.sp_AppUpcoming_Result item)
{
    if (item.V_Status == "Pre")
    {
        @*<span>Pre-Appointment</span>*@
        <span>Appointment</span>
    }
    else if (item.V_Status == "Reject")
    {
        <span>Rejected</span>
    }
    else if (item.V_Status == "Arrived")
    {
        <span>Visitor IN</span>
    }
    else if (item.V_Status == "Close")
    {
        <span>Closed</span>
    }
}

<div class="content" style="font-size:12px;min-height:100%">
    <div class="content_resize">
        <div class="mainbar">
            <div class="article">
                <h4 class="clsAccordion">
                    TOTAL UPCOMING  APPOINTMENTS
                </h4>
                <div role="tablist" class="ui-accordion ui-widget ui-helper-reset" id="accordion">
                    <h3 tabindex="0" aria-selected="false" aria-controls="ui-accordion-accordion-panel-0" id="ui-accordion-accordion-header-0" role="tab" class="clsAccordion ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-accordion-icons">
                        <a id="NewVisitorCompany" style="font-size: 15px; font-weight: 400; color: #555;" href="../Home/Create" class="VisitorCompanyQuickAdd">
                            <img src="~/Layout/Images/NewRecord.png">&nbsp;New
                        </a> &nbsp; &nbsp; &nbsp;
                    </h3>

                </div>
                <div id="VisitorCompanyTableContainer">
                    <div class="jtable-main-container">
                        <div class="jtable" id="jtable">
                            <div class="table table-bordered table-responsive" id="table2">
                                @Html.Grid(Model).Columns(columns =>
                           {
                               columns.Add(c => c.GPID).Titled("Appointment ID").Css("ContentTitle").Filterable(true).Sortable(true);
                           columns.Add(c => c.V_DateFrom).Titled("Date").Format("{0:dd/MMM/yyyy}").Css("ContentTitle").Sortable(true).Filterable(true);
                           columns.Add(c => c.A_Time).Titled("Time").Css("ContentTitle").Filterable(true).Sortable(true);
                           columns.Add(c => c.Duration).Titled("Duration").Css("ContentTitle").Sortable(true).Filterable(true);
                           columns.Add(c => c.CName).Titled("Company").Css("ContentTitle").Sortable(true).Filterable(true);
                           columns.Add(c => c.V_Name).Titled("Visitor").Css("ContentTitle").Sortable(true).Filterable(true);
                           columns.Add(c => c.NAME).Titled("Requestor").Css("ContentTitle").Sortable(true).Filterable(true);
                           columns.Add(c => c.Visitor_Type).Titled("Visit Type").Css("ContentTitle").Sortable(true).Filterable(true);
                           columns.Add(c => c.V_Status).Titled("Status").Css("ContentTitle").Sortable(true).Encoded(false).Sanitized(false).RenderValueAs(o => CustomPostionOfItam(o)).Filterable(true);
                           }).Sortable(true).WithPaging(10)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<link href="~/Layout/Content/style.css" rel="stylesheet" />

