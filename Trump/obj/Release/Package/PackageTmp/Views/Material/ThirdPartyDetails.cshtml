@model IEnumerable<TrumpCL.MaterialReport>

@{
    ViewBag.Title = "ThirdPartyDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/Gridmvc.css" rel="stylesheet" />

@using GridMvc.Html;
@using GridMvc.DataAnnotations;
@using GridMvc.Sorting;

@helper CustomRenderingOfColumn(TrumpCL.MaterialReport item)
{
    switch (item.M_Status)
    {
        case "Partial":
            @Html.ActionLink("Add", "Vendor", new { challan = item.ChallanNmbr })
            break;
        case "Open":
            @Html.ActionLink("Edit", "EditVendor", new { challan = item.ChallanNmbr })
            <a href="PurchasePDF?ID=@item.M_ID">Print</a>
            break;
    }
}
@helper CustomPostionOfItam(TrumpCL.MaterialReport item)
{
    if (item.M_Status == "Partial")
    {
        <span>Pending</span>
    }
    else if (item.M_Status == "Open")
    {
        <span>Approved</span>
    }
}
<link href="~/Layout/Css/jtable_jqueryui.css" rel="stylesheet" />
<link href="~/Layout/Css/jquery.dataTables_themeroller.css" rel="stylesheet" />

<div class="jtable-main-container">
    <div class="jtable" id="jtable">
        <div class="table table-bordered table-responsive" id="table2">
            @Html.Grid(Model).Columns(columns =>
       {
    columns.Add(c => c.ChallanNmbr).Titled("Challan Number").Css("ContentTitle").Filterable(true).Sortable(true);
    columns.Add(c => c.Requestor).Titled("Requestor").Css("ContentTitle").Filterable(true).Sortable(true);
    columns.Add(c => c.Dept).Titled("Department").Css("ContentTitle").Filterable(true).Sortable(true);
    columns.Add(c => c.RaiseDate).Titled("Raise Date").Format("{0:dd/MMM/yyyy}").Css("ContentTitle").Sortable(true).Filterable(true);
    columns.Add(c => c.M_Type).Titled("Type").Css("ContentTitle").Filterable(true).Sortable(true);
    columns.Add(c => c.S_Type).Titled("Supplier Type").Css("ContentTitle").Sortable(true).Filterable(true);
    columns.Add(c => c.M_Status).Titled("Status").Css("ContentTitle").Sortable(true).Encoded(false).Sanitized(false).RenderValueAs(o => CustomPostionOfItam(o)).Filterable(true);
    columns.Add().Titled("Action").Css("fr")
         .Encoded(false)
         .Sanitized(false)
    .RenderValueAs(o => CustomRenderingOfColumn(o));
}).Sortable(true).WithPaging(20)
        </div>
    </div>
</div>
