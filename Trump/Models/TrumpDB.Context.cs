//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trump.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TrumpEntities : DbContext
    {
        public TrumpEntities()
            : base("name=TrumpEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ApprovalHOD> ApprovalHODs { get; set; }
        public virtual DbSet<DemoFeedback> DemoFeedbacks { get; set; }
        public virtual DbSet<ExceptionLogger> ExceptionLoggers { get; set; }
        public virtual DbSet<Item_Material> Item_Material { get; set; }
        public virtual DbSet<Msgtemplate> Msgtemplates { get; set; }
        public virtual DbSet<tblAppoinment> tblAppoinments { get; set; }
        public virtual DbSet<tblApproval> tblApprovals { get; set; }
        public virtual DbSet<tblCompany> tblCompanies { get; set; }
        public virtual DbSet<tblIN_Out> tblIN_Out { get; set; }
        public virtual DbSet<tblMaterial> tblMaterials { get; set; }
        public virtual DbSet<tblMaterialInward> tblMaterialInwards { get; set; }
        public virtual DbSet<tblPO> tblPOes { get; set; }
        public virtual DbSet<tblPOItem> tblPOItems { get; set; }
        public virtual DbSet<tblQuestion> tblQuestions { get; set; }
        public virtual DbSet<tblSiteDistance> tblSiteDistances { get; set; }
        public virtual DbSet<tblUOM> tblUOMs { get; set; }
        public virtual DbSet<tblVisitor> tblVisitors { get; set; }
        public virtual DbSet<tblVisitorINOUT> tblVisitorINOUTs { get; set; }
        public virtual DbSet<VendorData> VendorDatas { get; set; }
        public virtual DbSet<VisitorAcceptance> VisitorAcceptances { get; set; }
        public virtual DbSet<VisitType> VisitTypes { get; set; }
        public virtual DbSet<WorkingLogin> WorkingLogins { get; set; }
        public virtual DbSet<tblSite> tblSites { get; set; }
        public virtual DbSet<tblCouriar> tblCouriars { get; set; }
        public virtual DbSet<tblCouriarHistory> tblCouriarHistories { get; set; }
        public virtual DbSet<tblPass> tblPasses { get; set; }
        public virtual DbSet<tblCCity> tblCCities { get; set; }
        public virtual DbSet<tblCDepartment> tblCDepartments { get; set; }
        public virtual DbSet<tblCRegion> tblCRegions { get; set; }
        public virtual DbSet<tblDeliveryTimeline> tblDeliveryTimelines { get; set; }
    
        public virtual int sp_ExceptionLogger(string exceptionMessage, string exceptionStackTrace, string controllerName, string iPAddress)
        {
            var exceptionMessageParameter = exceptionMessage != null ?
                new ObjectParameter("ExceptionMessage", exceptionMessage) :
                new ObjectParameter("ExceptionMessage", typeof(string));
    
            var exceptionStackTraceParameter = exceptionStackTrace != null ?
                new ObjectParameter("ExceptionStackTrace", exceptionStackTrace) :
                new ObjectParameter("ExceptionStackTrace", typeof(string));
    
            var controllerNameParameter = controllerName != null ?
                new ObjectParameter("ControllerName", controllerName) :
                new ObjectParameter("ControllerName", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExceptionLogger", exceptionMessageParameter, exceptionStackTraceParameter, controllerNameParameter, iPAddressParameter);
        }
    
        public virtual int sp_InsertPO(Nullable<System.DateTime> pODate, Nullable<long> pOnmbr, string suppliarName, string suppliarAddress, string gST, string contactperson, string contactNmbr, string modeOfTrans, string validID, string vehType, string vehNmbr, string drivrName, string region)
        {
            var pODateParameter = pODate.HasValue ?
                new ObjectParameter("PODate", pODate) :
                new ObjectParameter("PODate", typeof(System.DateTime));
    
            var pOnmbrParameter = pOnmbr.HasValue ?
                new ObjectParameter("POnmbr", pOnmbr) :
                new ObjectParameter("POnmbr", typeof(long));
    
            var suppliarNameParameter = suppliarName != null ?
                new ObjectParameter("SuppliarName", suppliarName) :
                new ObjectParameter("SuppliarName", typeof(string));
    
            var suppliarAddressParameter = suppliarAddress != null ?
                new ObjectParameter("SuppliarAddress", suppliarAddress) :
                new ObjectParameter("SuppliarAddress", typeof(string));
    
            var gSTParameter = gST != null ?
                new ObjectParameter("GST", gST) :
                new ObjectParameter("GST", typeof(string));
    
            var contactpersonParameter = contactperson != null ?
                new ObjectParameter("Contactperson", contactperson) :
                new ObjectParameter("Contactperson", typeof(string));
    
            var contactNmbrParameter = contactNmbr != null ?
                new ObjectParameter("ContactNmbr", contactNmbr) :
                new ObjectParameter("ContactNmbr", typeof(string));
    
            var modeOfTransParameter = modeOfTrans != null ?
                new ObjectParameter("ModeOfTrans", modeOfTrans) :
                new ObjectParameter("ModeOfTrans", typeof(string));
    
            var validIDParameter = validID != null ?
                new ObjectParameter("ValidID", validID) :
                new ObjectParameter("ValidID", typeof(string));
    
            var vehTypeParameter = vehType != null ?
                new ObjectParameter("VehType", vehType) :
                new ObjectParameter("VehType", typeof(string));
    
            var vehNmbrParameter = vehNmbr != null ?
                new ObjectParameter("VehNmbr", vehNmbr) :
                new ObjectParameter("VehNmbr", typeof(string));
    
            var drivrNameParameter = drivrName != null ?
                new ObjectParameter("DrivrName", drivrName) :
                new ObjectParameter("DrivrName", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertPO", pODateParameter, pOnmbrParameter, suppliarNameParameter, suppliarAddressParameter, gSTParameter, contactpersonParameter, contactNmbrParameter, modeOfTransParameter, validIDParameter, vehTypeParameter, vehNmbrParameter, drivrNameParameter, regionParameter);
        }
    
        public virtual int sp_MaterialInward()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MaterialInward");
        }
    
        public virtual int sp_PurchaseVendor(string partyName, string partyAddress, string gST)
        {
            var partyNameParameter = partyName != null ?
                new ObjectParameter("PartyName", partyName) :
                new ObjectParameter("PartyName", typeof(string));
    
            var partyAddressParameter = partyAddress != null ?
                new ObjectParameter("PartyAddress", partyAddress) :
                new ObjectParameter("PartyAddress", typeof(string));
    
            var gSTParameter = gST != null ?
                new ObjectParameter("GST", gST) :
                new ObjectParameter("GST", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PurchaseVendor", partyNameParameter, partyAddressParameter, gSTParameter);
        }
    
        public virtual int sp_Refresh()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Refresh");
        }
    
        public virtual ObjectResult<Proc_tblCouriar_Insert_Result> Proc_tblCouriar_Insert(ObjectParameter couriarId, string region, string nameOfCompany, string city, string documents, string receiveTime, string docketNo, string couriarVendor, string remark, string currentStatus, Nullable<System.DateTime> transactionDate, Nullable<System.DateTime> c_Date, string employeeId, string employeeName, string couriarType, string department, string packetType, string senderName, Nullable<int> regionId, string commandType, ObjectParameter isSuccess)
        {
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var nameOfCompanyParameter = nameOfCompany != null ?
                new ObjectParameter("NameOfCompany", nameOfCompany) :
                new ObjectParameter("NameOfCompany", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var documentsParameter = documents != null ?
                new ObjectParameter("Documents", documents) :
                new ObjectParameter("Documents", typeof(string));
    
            var receiveTimeParameter = receiveTime != null ?
                new ObjectParameter("ReceiveTime", receiveTime) :
                new ObjectParameter("ReceiveTime", typeof(string));
    
            var docketNoParameter = docketNo != null ?
                new ObjectParameter("DocketNo", docketNo) :
                new ObjectParameter("DocketNo", typeof(string));
    
            var couriarVendorParameter = couriarVendor != null ?
                new ObjectParameter("CouriarVendor", couriarVendor) :
                new ObjectParameter("CouriarVendor", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var currentStatusParameter = currentStatus != null ?
                new ObjectParameter("CurrentStatus", currentStatus) :
                new ObjectParameter("CurrentStatus", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var c_DateParameter = c_Date.HasValue ?
                new ObjectParameter("C_Date", c_Date) :
                new ObjectParameter("C_Date", typeof(System.DateTime));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var couriarTypeParameter = couriarType != null ?
                new ObjectParameter("CouriarType", couriarType) :
                new ObjectParameter("CouriarType", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var packetTypeParameter = packetType != null ?
                new ObjectParameter("PacketType", packetType) :
                new ObjectParameter("PacketType", typeof(string));
    
            var senderNameParameter = senderName != null ?
                new ObjectParameter("SenderName", senderName) :
                new ObjectParameter("SenderName", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var commandTypeParameter = commandType != null ?
                new ObjectParameter("CommandType", commandType) :
                new ObjectParameter("CommandType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_tblCouriar_Insert_Result>("Proc_tblCouriar_Insert", couriarId, regionParameter, nameOfCompanyParameter, cityParameter, documentsParameter, receiveTimeParameter, docketNoParameter, couriarVendorParameter, remarkParameter, currentStatusParameter, transactionDateParameter, c_DateParameter, employeeIdParameter, employeeNameParameter, couriarTypeParameter, departmentParameter, packetTypeParameter, senderNameParameter, regionIdParameter, commandTypeParameter, isSuccess);
        }
    
        public virtual ObjectResult<Proc_tblCouriarDIsptch_Insert_Result> Proc_tblCouriarDIsptch_Insert(ObjectParameter couriarId, string region, string nameOfCompany, string city, string documents, string receiveTime, string couriarVendor, string remark, string currentStatus, Nullable<System.DateTime> transactionDate, Nullable<System.DateTime> c_Date, string employeeId, string couriarType, string department, string person, string contactNo, string address, Nullable<System.DateTime> deliveryDate, string fromCity, string packetType, string senderName, string senderContactNo, string hazardousItemYN, Nullable<int> regionId, string commandType, ObjectParameter isSuccess)
        {
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var nameOfCompanyParameter = nameOfCompany != null ?
                new ObjectParameter("NameOfCompany", nameOfCompany) :
                new ObjectParameter("NameOfCompany", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var documentsParameter = documents != null ?
                new ObjectParameter("Documents", documents) :
                new ObjectParameter("Documents", typeof(string));
    
            var receiveTimeParameter = receiveTime != null ?
                new ObjectParameter("ReceiveTime", receiveTime) :
                new ObjectParameter("ReceiveTime", typeof(string));
    
            var couriarVendorParameter = couriarVendor != null ?
                new ObjectParameter("CouriarVendor", couriarVendor) :
                new ObjectParameter("CouriarVendor", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var currentStatusParameter = currentStatus != null ?
                new ObjectParameter("CurrentStatus", currentStatus) :
                new ObjectParameter("CurrentStatus", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var c_DateParameter = c_Date.HasValue ?
                new ObjectParameter("C_Date", c_Date) :
                new ObjectParameter("C_Date", typeof(System.DateTime));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var couriarTypeParameter = couriarType != null ?
                new ObjectParameter("CouriarType", couriarType) :
                new ObjectParameter("CouriarType", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var personParameter = person != null ?
                new ObjectParameter("Person", person) :
                new ObjectParameter("Person", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(System.DateTime));
    
            var fromCityParameter = fromCity != null ?
                new ObjectParameter("FromCity", fromCity) :
                new ObjectParameter("FromCity", typeof(string));
    
            var packetTypeParameter = packetType != null ?
                new ObjectParameter("PacketType", packetType) :
                new ObjectParameter("PacketType", typeof(string));
    
            var senderNameParameter = senderName != null ?
                new ObjectParameter("SenderName", senderName) :
                new ObjectParameter("SenderName", typeof(string));
    
            var senderContactNoParameter = senderContactNo != null ?
                new ObjectParameter("SenderContactNo", senderContactNo) :
                new ObjectParameter("SenderContactNo", typeof(string));
    
            var hazardousItemYNParameter = hazardousItemYN != null ?
                new ObjectParameter("HazardousItemYN", hazardousItemYN) :
                new ObjectParameter("HazardousItemYN", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var commandTypeParameter = commandType != null ?
                new ObjectParameter("CommandType", commandType) :
                new ObjectParameter("CommandType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_tblCouriarDIsptch_Insert_Result>("Proc_tblCouriarDIsptch_Insert", couriarId, regionParameter, nameOfCompanyParameter, cityParameter, documentsParameter, receiveTimeParameter, couriarVendorParameter, remarkParameter, currentStatusParameter, transactionDateParameter, c_DateParameter, employeeIdParameter, couriarTypeParameter, departmentParameter, personParameter, contactNoParameter, addressParameter, deliveryDateParameter, fromCityParameter, packetTypeParameter, senderNameParameter, senderContactNoParameter, hazardousItemYNParameter, regionIdParameter, commandTypeParameter, isSuccess);
        }
    
        public virtual int sp_Company(string name, string addres, string phone, string gst, string city, string pin, string state, ObjectParameter iD, Nullable<int> regionId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addresParameter = addres != null ?
                new ObjectParameter("Addres", addres) :
                new ObjectParameter("Addres", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var gstParameter = gst != null ?
                new ObjectParameter("gst", gst) :
                new ObjectParameter("gst", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Company", nameParameter, addresParameter, phoneParameter, gstParameter, cityParameter, pinParameter, stateParameter, iD, regionIdParameter);
        }
    
        public virtual int sp_InsertAppointment(string gPID, string requestor, string deptment, Nullable<int> comanyID, Nullable<int> visitorID, string visitor_Type, Nullable<System.DateTime> v_DateFrom, string a_Time, Nullable<System.DateTime> v_DateTo, string duration, string v_Location, string remark, string v_Allowed, string a_Type, Nullable<System.DateTime> v_InDate, Nullable<System.DateTime> v_OutDate, string location, string status, string entryType, ObjectParameter iD, Nullable<int> regionid)
        {
            var gPIDParameter = gPID != null ?
                new ObjectParameter("GPID", gPID) :
                new ObjectParameter("GPID", typeof(string));
    
            var requestorParameter = requestor != null ?
                new ObjectParameter("Requestor", requestor) :
                new ObjectParameter("Requestor", typeof(string));
    
            var deptmentParameter = deptment != null ?
                new ObjectParameter("Deptment", deptment) :
                new ObjectParameter("Deptment", typeof(string));
    
            var comanyIDParameter = comanyID.HasValue ?
                new ObjectParameter("ComanyID", comanyID) :
                new ObjectParameter("ComanyID", typeof(int));
    
            var visitorIDParameter = visitorID.HasValue ?
                new ObjectParameter("VisitorID", visitorID) :
                new ObjectParameter("VisitorID", typeof(int));
    
            var visitor_TypeParameter = visitor_Type != null ?
                new ObjectParameter("Visitor_Type", visitor_Type) :
                new ObjectParameter("Visitor_Type", typeof(string));
    
            var v_DateFromParameter = v_DateFrom.HasValue ?
                new ObjectParameter("V_DateFrom", v_DateFrom) :
                new ObjectParameter("V_DateFrom", typeof(System.DateTime));
    
            var a_TimeParameter = a_Time != null ?
                new ObjectParameter("A_Time", a_Time) :
                new ObjectParameter("A_Time", typeof(string));
    
            var v_DateToParameter = v_DateTo.HasValue ?
                new ObjectParameter("V_DateTo", v_DateTo) :
                new ObjectParameter("V_DateTo", typeof(System.DateTime));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var v_LocationParameter = v_Location != null ?
                new ObjectParameter("V_Location", v_Location) :
                new ObjectParameter("V_Location", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var v_AllowedParameter = v_Allowed != null ?
                new ObjectParameter("V_Allowed", v_Allowed) :
                new ObjectParameter("V_Allowed", typeof(string));
    
            var a_TypeParameter = a_Type != null ?
                new ObjectParameter("A_Type", a_Type) :
                new ObjectParameter("A_Type", typeof(string));
    
            var v_InDateParameter = v_InDate.HasValue ?
                new ObjectParameter("V_InDate", v_InDate) :
                new ObjectParameter("V_InDate", typeof(System.DateTime));
    
            var v_OutDateParameter = v_OutDate.HasValue ?
                new ObjectParameter("V_OutDate", v_OutDate) :
                new ObjectParameter("V_OutDate", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var entryTypeParameter = entryType != null ?
                new ObjectParameter("EntryType", entryType) :
                new ObjectParameter("EntryType", typeof(string));
    
            var regionidParameter = regionid.HasValue ?
                new ObjectParameter("Regionid", regionid) :
                new ObjectParameter("Regionid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAppointment", gPIDParameter, requestorParameter, deptmentParameter, comanyIDParameter, visitorIDParameter, visitor_TypeParameter, v_DateFromParameter, a_TimeParameter, v_DateToParameter, durationParameter, v_LocationParameter, remarkParameter, v_AllowedParameter, a_TypeParameter, v_InDateParameter, v_OutDateParameter, locationParameter, statusParameter, entryTypeParameter, iD, regionidParameter);
        }
    
        public virtual ObjectResult<GetAppointmentDetails_Result> GetAppointmentDetails(Nullable<int> personalDetailsId, string req, Nullable<int> company, string visitType)
        {
            var personalDetailsIdParameter = personalDetailsId.HasValue ?
                new ObjectParameter("personalDetailsId", personalDetailsId) :
                new ObjectParameter("personalDetailsId", typeof(int));
    
            var reqParameter = req != null ?
                new ObjectParameter("Req", req) :
                new ObjectParameter("Req", typeof(string));
    
            var companyParameter = company.HasValue ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(int));
    
            var visitTypeParameter = visitType != null ?
                new ObjectParameter("visitType", visitType) :
                new ObjectParameter("visitType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAppointmentDetails_Result>("GetAppointmentDetails", personalDetailsIdParameter, reqParameter, companyParameter, visitTypeParameter);
        }
    
        public virtual ObjectResult<sp_AppToday_Result> sp_AppToday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AppToday_Result>("sp_AppToday");
        }
    
        public virtual ObjectResult<sp_AppUpcoming_Result> sp_AppUpcoming()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AppUpcoming_Result>("sp_AppUpcoming");
        }
    
        public virtual ObjectResult<sp_DateReport_Result> sp_DateReport(Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate)
        {
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("Fdate", fdate) :
                new ObjectParameter("Fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("Tdate", tdate) :
                new ObjectParameter("Tdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DateReport_Result>("sp_DateReport", fdateParameter, tdateParameter);
        }
    
        public virtual ObjectResult<sp_DownloadePass_Result> sp_DownloadePass(string gPID)
        {
            var gPIDParameter = gPID != null ?
                new ObjectParameter("GPID", gPID) :
                new ObjectParameter("GPID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DownloadePass_Result>("sp_DownloadePass", gPIDParameter);
        }
    
        public virtual ObjectResult<sp_HCV_Result> sp_HCV(string location)
        {
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HCV_Result>("sp_HCV", locationParameter);
        }
    
        public virtual ObjectResult<sp_HCVALL_Result> sp_HCVALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HCVALL_Result>("sp_HCVALL");
        }
    
        public virtual ObjectResult<sp_SecurityToday_Result> sp_SecurityToday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SecurityToday_Result>("sp_SecurityToday");
        }
    
        public virtual ObjectResult<sp_ViewApp_Result> sp_ViewApp(string gPID)
        {
            var gPIDParameter = gPID != null ?
                new ObjectParameter("GPID", gPID) :
                new ObjectParameter("GPID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ViewApp_Result>("sp_ViewApp", gPIDParameter);
        }
    
        public virtual int sp_visitor(string v_Name, string v_Phone, string v_Email, string visitor_ID, string v_IDNumber, byte[] v_Pic, Nullable<int> c_ID, string v_Type, ObjectParameter iD, Nullable<int> regionId)
        {
            var v_NameParameter = v_Name != null ?
                new ObjectParameter("V_Name", v_Name) :
                new ObjectParameter("V_Name", typeof(string));
    
            var v_PhoneParameter = v_Phone != null ?
                new ObjectParameter("V_Phone", v_Phone) :
                new ObjectParameter("V_Phone", typeof(string));
    
            var v_EmailParameter = v_Email != null ?
                new ObjectParameter("V_Email", v_Email) :
                new ObjectParameter("V_Email", typeof(string));
    
            var visitor_IDParameter = visitor_ID != null ?
                new ObjectParameter("Visitor_ID", visitor_ID) :
                new ObjectParameter("Visitor_ID", typeof(string));
    
            var v_IDNumberParameter = v_IDNumber != null ?
                new ObjectParameter("V_IDNumber", v_IDNumber) :
                new ObjectParameter("V_IDNumber", typeof(string));
    
            var v_PicParameter = v_Pic != null ?
                new ObjectParameter("V_Pic", v_Pic) :
                new ObjectParameter("V_Pic", typeof(byte[]));
    
            var c_IDParameter = c_ID.HasValue ?
                new ObjectParameter("C_ID", c_ID) :
                new ObjectParameter("C_ID", typeof(int));
    
            var v_TypeParameter = v_Type != null ?
                new ObjectParameter("V_Type", v_Type) :
                new ObjectParameter("V_Type", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_visitor", v_NameParameter, v_PhoneParameter, v_EmailParameter, visitor_IDParameter, v_IDNumberParameter, v_PicParameter, c_IDParameter, v_TypeParameter, iD, regionIdParameter);
        }
    }
}
